// Mocks generated by Mockito 5.4.4 from annotations
// in jhon_rhay_parreno_technical_assessment/test/faetures/weather/presentation/bloc/weather_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:fpdart/fpdart.dart' as _i9;
import 'package:geolocator/geolocator.dart' as _i2;
import 'package:jhon_rhay_parreno_technical_assessment/core/error/failure.dart'
    as _i10;
import 'package:jhon_rhay_parreno_technical_assessment/core/location/get_current_location.dart'
    as _i4;
import 'package:jhon_rhay_parreno_technical_assessment/core/permission/app_permission.dart'
    as _i6;
import 'package:jhon_rhay_parreno_technical_assessment/features/weather/domain/repository/weather_repository.dart'
    as _i3;
import 'package:jhon_rhay_parreno_technical_assessment/features/weather/domain/usecase/get_current_weather.dart'
    as _i8;
import 'package:jhon_rhay_parreno_technical_assessment/features/weather/domain/usecase/get_weather_for_five_days.dart'
    as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:weather/weather.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePosition_0 extends _i1.SmartFake implements _i2.Position {
  _FakePosition_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWeatherRepository_1 extends _i1.SmartFake
    implements _i3.WeatherRepository {
  _FakeWeatherRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i4.LocationService {
  @override
  _i5.Future<_i2.Position> getCurrentPosition() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentPosition,
          [],
        ),
        returnValue: _i5.Future<_i2.Position>.value(_FakePosition_0(
          this,
          Invocation.method(
            #getCurrentPosition,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Position>.value(_FakePosition_0(
          this,
          Invocation.method(
            #getCurrentPosition,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Position>);
}

/// A class which mocks [PermissionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPermissionService extends _i1.Mock implements _i6.PermissionService {
  @override
  _i5.Future<bool> locationPermission() => (super.noSuchMethod(
        Invocation.method(
          #locationPermission,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [Weather].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeather extends _i1.Mock implements _i7.Weather {}

/// A class which mocks [GetCurrentWeather].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCurrentWeather extends _i1.Mock implements _i8.GetCurrentWeather {
  @override
  _i3.WeatherRepository get weatherRepository => (super.noSuchMethod(
        Invocation.getter(#weatherRepository),
        returnValue: _FakeWeatherRepository_1(
          this,
          Invocation.getter(#weatherRepository),
        ),
        returnValueForMissingStub: _FakeWeatherRepository_1(
          this,
          Invocation.getter(#weatherRepository),
        ),
      ) as _i3.WeatherRepository);

  @override
  _i5.Future<_i9.Either<_i10.Failure, _i7.Weather>> call(
          _i8.GetCurrentWeatherParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i9.Either<_i10.Failure, _i7.Weather>>.value(
            _i11.dummyValue<_i9.Either<_i10.Failure, _i7.Weather>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i9.Either<_i10.Failure, _i7.Weather>>.value(
                _i11.dummyValue<_i9.Either<_i10.Failure, _i7.Weather>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i9.Either<_i10.Failure, _i7.Weather>>);
}

/// A class which mocks [GetWeatherForFiveDays].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWeatherForFiveDays extends _i1.Mock
    implements _i12.GetWeatherForFiveDays {
  @override
  _i3.WeatherRepository get weatherRepository => (super.noSuchMethod(
        Invocation.getter(#weatherRepository),
        returnValue: _FakeWeatherRepository_1(
          this,
          Invocation.getter(#weatherRepository),
        ),
        returnValueForMissingStub: _FakeWeatherRepository_1(
          this,
          Invocation.getter(#weatherRepository),
        ),
      ) as _i3.WeatherRepository);

  @override
  _i5.Future<_i9.Either<_i10.Failure, List<_i7.Weather>>> call(
          _i12.GetWeatherForFiveDaysParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i5.Future<_i9.Either<_i10.Failure, List<_i7.Weather>>>.value(
                _i11.dummyValue<_i9.Either<_i10.Failure, List<_i7.Weather>>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i9.Either<_i10.Failure, List<_i7.Weather>>>.value(
                _i11.dummyValue<_i9.Either<_i10.Failure, List<_i7.Weather>>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i9.Either<_i10.Failure, List<_i7.Weather>>>);
}
